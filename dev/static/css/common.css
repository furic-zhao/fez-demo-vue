/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.icon {
  display: inline-block;
}
.icon-weibo {
  background-image: url(../images/sprite/sprite.png);
  background-position: 0px 0px;
  width: 32px;
  height: 32px;
}
.icon-weixin {
  background-image: url(../images/sprite/sprite.png);
  background-position: -36px 0px;
  width: 32px;
  height: 32px;
}
body {
  padding-top: 50px;
}
.starter-template {
  padding: 40px 15px;
  text-align: center;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInB1YmxpYy9mb290ZXIubGVzcyIsInNwcml0ZS9zcHJpdGUubGVzcyIsImNvbW1vbi5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0E7RUFDSSxxQkFBQTs7QUFFSjtFQytFRSxrREFBQTtFQU5BLDRCQUFBO0VBVkEsV0FBQTtFQUlBLFlBQUE7O0FEaEVGO0VDNEVFLGtEQUFBO0VBTkEsOEJBQUE7RUFWQSxXQUFBO0VBSUEsWUFBQTs7QUN0RUY7RUFDSSxpQkFBQTs7QUFFSjtFQUNJLGtCQUFBO0VBQ0Esa0JBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiLi4vc3ByaXRlL3Nwcml0ZVwiO1xuLmljb24ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cbi5pY29uLXdlaWJvIHtcbiAgICAuc3ByaXRlKEB3ZWlibyk7XG59XG4uaWNvbi13ZWl4aW4ge1xuICAgIC5zcHJpdGUoQHdlaXhpbik7XG59XG4iLCIvKlxuTEVTUyB2YXJpYWJsZXMgYXJlIGluZm9ybWF0aW9uIGFib3V0IGljb24ncyBjb21waWxlZCBzdGF0ZSwgc3RvcmVkIHVuZGVyIGl0cyBvcmlnaW5hbCBmaWxlIG5hbWVcblxuLmljb24taG9tZSB7XG4gIHdpZHRoOiBAaWNvbi1ob21lLXdpZHRoO1xufVxuXG5UaGUgbGFyZ2UgYXJyYXktbGlrZSB2YXJpYWJsZXMgY29udGFpbiBhbGwgaW5mb3JtYXRpb24gYWJvdXQgYSBzaW5nbGUgaWNvblxuQGljb24taG9tZTogeCB5IG9mZnNldF94IG9mZnNldF95IHdpZHRoIGhlaWdodCB0b3RhbF93aWR0aCB0b3RhbF9oZWlnaHQgaW1hZ2VfcGF0aCBuYW1lO1xuXG5BdCB0aGUgYm90dG9tIG9mIHRoaXMgc2VjdGlvbiwgd2UgcHJvdmlkZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgc3ByaXRlc2hlZXQgaXRzZWxmXG5Ac3ByaXRlc2hlZXQ6IHdpZHRoIGhlaWdodCBpbWFnZSBAc3ByaXRlc2hlZXQtc3ByaXRlcztcbiovXG5Ad2VpYm8tbmFtZTogJ3dlaWJvJztcbkB3ZWliby14OiAwcHg7XG5Ad2VpYm8teTogMHB4O1xuQHdlaWJvLW9mZnNldC14OiAwcHg7XG5Ad2VpYm8tb2Zmc2V0LXk6IDBweDtcbkB3ZWliby13aWR0aDogMzJweDtcbkB3ZWliby1oZWlnaHQ6IDMycHg7XG5Ad2VpYm8tdG90YWwtd2lkdGg6IDY4cHg7XG5Ad2VpYm8tdG90YWwtaGVpZ2h0OiAzMnB4O1xuQHdlaWJvLWltYWdlOiAnLi4vLi4vaW1hZ2VzL3Nwcml0ZS9zcHJpdGUucG5nJztcbkB3ZWlibzogMHB4IDBweCAwcHggMHB4IDMycHggMzJweCA2OHB4IDMycHggJy4uLy4uL2ltYWdlcy9zcHJpdGUvc3ByaXRlLnBuZycgJ3dlaWJvJztcbkB3ZWl4aW4tbmFtZTogJ3dlaXhpbic7XG5Ad2VpeGluLXg6IDM2cHg7XG5Ad2VpeGluLXk6IDBweDtcbkB3ZWl4aW4tb2Zmc2V0LXg6IC0zNnB4O1xuQHdlaXhpbi1vZmZzZXQteTogMHB4O1xuQHdlaXhpbi13aWR0aDogMzJweDtcbkB3ZWl4aW4taGVpZ2h0OiAzMnB4O1xuQHdlaXhpbi10b3RhbC13aWR0aDogNjhweDtcbkB3ZWl4aW4tdG90YWwtaGVpZ2h0OiAzMnB4O1xuQHdlaXhpbi1pbWFnZTogJy4uLy4uL2ltYWdlcy9zcHJpdGUvc3ByaXRlLnBuZyc7XG5Ad2VpeGluOiAzNnB4IDBweCAtMzZweCAwcHggMzJweCAzMnB4IDY4cHggMzJweCAnLi4vLi4vaW1hZ2VzL3Nwcml0ZS9zcHJpdGUucG5nJyAnd2VpeGluJztcbkBzcHJpdGVzaGVldC13aWR0aDogNjhweDtcbkBzcHJpdGVzaGVldC1oZWlnaHQ6IDMycHg7XG5Ac3ByaXRlc2hlZXQtaW1hZ2U6ICcuLi8uLi9pbWFnZXMvc3ByaXRlL3Nwcml0ZS5wbmcnO1xuQHNwcml0ZXNoZWV0LXNwcml0ZXM6IEB3ZWlibyBAd2VpeGluO1xuQHNwcml0ZXNoZWV0OiA2OHB4IDMycHggJy4uLy4uL2ltYWdlcy9zcHJpdGUvc3ByaXRlLnBuZycgQHNwcml0ZXNoZWV0LXNwcml0ZXM7XG5cbi8qXG5UaGUgcHJvdmlkZWQgY2xhc3NlcyBhcmUgaW50ZW5kZWQgdG8gYmUgdXNlZCB3aXRoIHRoZSBhcnJheS1saWtlIHZhcmlhYmxlc1xuXG4uaWNvbi1ob21lIHtcbiAgLnNwcml0ZS13aWR0aChAaWNvbi1ob21lKTtcbn1cbi5pY29uLWVtYWlsIHtcbiAgLnNwcml0ZShAaWNvbi1lbWFpbCk7XG59XG5cbkV4YW1wbGUgdXNhZ2UgaW4gSFRNTDpcblxuYGRpc3BsYXk6IGJsb2NrYCBzcHJpdGU6XG48ZGl2IGNsYXNzPVwiaWNvbi1ob21lXCI+PC9kaXY+XG5cblRvIGNoYW5nZSBgZGlzcGxheWAgKGUuZy4gYGRpc3BsYXk6IGlubGluZS1ibG9jaztgKSwgd2Ugc3VnZ2VzdCB1c2luZyBhIGNvbW1vbiBDU1MgY2xhc3M6XG5cbi8vIENTU1xuLmljb24ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi8vIEhUTUxcbjxpIGNsYXNzPVwiaWNvbiBpY29uLWhvbWVcIj48L2k+XG4qL1xuLnNwcml0ZS13aWR0aChAc3ByaXRlKSB7XG4gIHdpZHRoOiBleHRyYWN0KEBzcHJpdGUsIDUpO1xufVxuXG4uc3ByaXRlLWhlaWdodChAc3ByaXRlKSB7XG4gIGhlaWdodDogZXh0cmFjdChAc3ByaXRlLCA2KTtcbn1cblxuLnNwcml0ZS1wb3NpdGlvbihAc3ByaXRlKSB7XG4gIEBzcHJpdGUtb2Zmc2V0LXg6IGV4dHJhY3QoQHNwcml0ZSwgMyk7XG4gIEBzcHJpdGUtb2Zmc2V0LXk6IGV4dHJhY3QoQHNwcml0ZSwgNCk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IEBzcHJpdGUtb2Zmc2V0LXggQHNwcml0ZS1vZmZzZXQteTtcbn1cblxuLnNwcml0ZS1pbWFnZShAc3ByaXRlKSB7XG4gIEBzcHJpdGUtaW1hZ2U6IGV4dHJhY3QoQHNwcml0ZSwgOSk7XG4gIEBzcHJpdGUtaW1hZ2UtYmFyZTogfmBcIkB7c3ByaXRlLWltYWdlfVwiLnNsaWNlKDEsIC0xKWA7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChAc3ByaXRlLWltYWdlLWJhcmUpO1xufVxuXG4uc3ByaXRlKEBzcHJpdGUpIHtcbiAgLnNwcml0ZS1pbWFnZShAc3ByaXRlKTtcbiAgLnNwcml0ZS1wb3NpdGlvbihAc3ByaXRlKTtcbiAgLnNwcml0ZS13aWR0aChAc3ByaXRlKTtcbiAgLnNwcml0ZS1oZWlnaHQoQHNwcml0ZSk7XG59XG5cbi8qXG5UaGUgYC5zcHJpdGVzYCBtaXhpbiBnZW5lcmF0ZXMgaWRlbnRpY2FsIG91dHB1dCB0byB0aGUgQ1NTIHRlbXBsYXRlXG4gIGJ1dCBjYW4gYmUgb3ZlcnJpZGRlbiBpbnNpZGUgb2YgTEVTU1xuXG5UaGlzIG11c3QgYmUgcnVuIHdoZW4geW91IGhhdmUgYXQgbGVhc3QgMiBzcHJpdGVzLlxuICBJZiBydW4gd2l0aCBhIHNpbmdsZSBzcHJpdGUsIHRoZW4gdGhlcmUgd2lsbCBiZSByZWZlcmVuY2UgZXJyb3JzLlxuXG4uc3ByaXRlcyhAc3ByaXRlc2hlZXQtc3ByaXRlcyk7XG4qL1xuLnNwcml0ZXMoQHNwcml0ZXMsIEBpOiAxKSB3aGVuIChAaSA8PSBsZW5ndGgoQHNwcml0ZXMpKSB7XG4gIEBzcHJpdGU6IGV4dHJhY3QoQHNwcml0ZXMsIEBpKTtcbiAgQHNwcml0ZS1uYW1lOiBlKGV4dHJhY3QoQHNwcml0ZSwgMTApKTtcbiAgLkB7c3ByaXRlLW5hbWV9IHtcbiAgICAuc3ByaXRlKEBzcHJpdGUpO1xuICB9XG4gIC5zcHJpdGVzKEBzcHJpdGVzLCBAaSArIDEpO1xufVxuIiwiQGltcG9ydCBcInB1YmxpYy9mb290ZXJcIjtcbmJvZHkge1xuICAgIHBhZGRpbmctdG9wOiA1MHB4O1xufVxuLnN0YXJ0ZXItdGVtcGxhdGUge1xuICAgIHBhZGRpbmc6IDQwcHggMTVweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4iXSwiZmlsZSI6ImNvbW1vbi5jc3MifQ== */
